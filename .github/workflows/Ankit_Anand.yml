name: Deploy Flask App to EC2

on:
  push:
    branches:
      - staging
  release:
    types: [created]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set Environment Variable for MongoDB
        run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          pip install pytest
          pytest test_app.py

      - name: Deploy to EC2 via SSH
        if: success()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
              # Update and install required packages
              sudo apt update -y
              sudo apt install -y git python3 python3-pip python3-venv
            
              # Set repo variables
              REPO_DIR="/home/ubuntu/my-flask-app"
              REPO_URL="https://github.com/yourusername/yourrepo.git"
              VENV_DIR="$REPO_DIR/venv"
            
              # Clone or pull repo
              if [ -d "$REPO_DIR" ]; then
                echo "Directory exists. Pulling latest changes..."
                cd $REPO_DIR
                git pull
              else
                echo "Directory does not exist. Cloning..."
                git clone $REPO_URL $REPO_DIR
                cd $REPO_DIR
              fi
            
              # Set up virtual environment
              if [ ! -d "$VENV_DIR" ]; then
                echo "Creating virtual environment..."
                python3 -m venv $VENV_DIR
              fi
            
              # Activate venv and install dependencies
              source $VENV_DIR/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt
            
              # Kill existing Flask process
              pkill -f app.py || true
            
              # Run app with virtual environment
              nohup $VENV_DIR/bin/python app.py > flask.log 2>&1 &
